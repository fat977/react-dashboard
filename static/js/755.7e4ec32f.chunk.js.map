{"version":3,"file":"static/js/755.7e4ec32f.chunk.js","mappings":"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","sources":["pages/Elements/Modals&Alerts/Modals.js","pages/Elements/Modals&Alerts/SweetAlert.js","pages/Elements/Modals&Alerts/Toasts.js","pages/Elements/Modals&Alerts/Toastr.js","pages/Elements/Modals&Alerts/Modals&Alerts.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport{Button,ButtonGroup,Form,Modal} from '../../../components/bootstrapComponent'\r\nexport default function ModalsContent() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [showFormModal, setShowFormModal] = useState(false);\r\n\r\n  const handleCloseFormModal = () => setShowFormModal(false);\r\n  const handleShowFormModal = () => setShowFormModal(true);\r\n\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  const [showFullscreen, setShowFullscreen] = useState(false);\r\n\r\n  function handleShowFullscreen() {\r\n    setShowFullscreen(true);\r\n  }\r\n  return (\r\n    <>\r\n      <ButtonGroup aria-label=\"Basic example\" className=\"gap-3 d-flex flex-wrap\">\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Basic Modal\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleShowFormModal}>\r\n          Vertical center form modal\r\n        </Button>\r\n\r\n        <Button onClick={() => setSmShow(true)}>\r\n          Small modal\r\n        </Button>\r\n        <Button onClick={() => setLgShow(true)}>Large modal</Button>\r\n        <Button onClick={() => handleShowFullscreen()}>\r\n          Full Screen\r\n        </Button>\r\n      </ButtonGroup>\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n\r\n      <>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={showFormModal}\r\n          onClick={handleCloseFormModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Modal heading\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                controlId=\"exampleForm.ControlInput2\"\r\n              >\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"name@example.com\"\r\n                  autoFocus\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                controlId=\"exampleForm.ControlTextarea1\"\r\n              >\r\n                <Form.Label>Example textarea</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} />\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseFormModal}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleCloseFormModal}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n\r\n      <>\r\n        <Modal\r\n          size=\"sm\"\r\n          show={smShow}\r\n          onHide={() => setSmShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n              Small Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n        <Modal\r\n          size=\"lg\"\r\n          show={lgShow}\r\n          onHide={() => setLgShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Large Modal\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>...</Modal.Body>\r\n        </Modal>\r\n      </>\r\n\r\n      <>\r\n        <Modal\r\n          show={showFullscreen}\r\n          fullscreen={showFullscreen}\r\n          onClick={() => setShowFullscreen(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Modal body content</Modal.Body>\r\n        </Modal>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import Button  from \"react-bootstrap/Button\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nexport default function SweetAlertContent(){\r\n    const MySwal = withReactContent(Swal);\r\n\r\n    const showAlert = () => {\r\n        MySwal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            Swal.fire({\r\n              title: \"Deleted!\",\r\n              text: \"Your file has been deleted.\",\r\n              icon: \"success\",\r\n            });\r\n          }\r\n        });\r\n      };\r\n    return(\r\n        <div className=\"d-flex gap-3\">\r\n        <Button onClick={showAlert}>Show SweetAlert</Button>\r\n                  <a\r\n                    href=\"https://sweetalert2.github.io/#examples\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    for more example\r\n                  </a>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Button, Toast } from \"../../../components/bootstrapComponent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ToastContent() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n   \r\n      <>\r\n        <Button onClick={() => setShow(true)}>Show Toast</Button>\r\n\r\n        <Toast\r\n          onClose={() => setShow(false)}\r\n          show={show}\r\n          delay={3000}\r\n          autohide\r\n          className=\"d-inline-block m-1\"\r\n          bg=\"dark\"\r\n        >\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Bootstrap</strong>\r\n            <small>11 mins ago</small>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark text-white\">\r\n            Hello, world! This is a toast message.\r\n          </Toast.Body>\r\n        </Toast>\r\n      </>\r\n   \r\n  );\r\n}\r\n","import Button  from \"react-bootstrap/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nexport default function ToastrContent() {\r\n  const notifySuccess = () => toast.success(\"This is a success toast!\");\r\n  const notifyError = () => toast.error(\"This is an error toast!\");\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        style={{ marginTop: \"100px\" }}\r\n        autoClose={5000}\r\n      />\r\n\r\n      <div className=\"d-flex flex-wrap gap-3\">\r\n        <Button onClick={notifySuccess}>Show Success Toast</Button>\r\n        <Button onClick={notifyError}>Show Error Toast</Button>\r\n\r\n        <a\r\n          href=\"https://fkhadra.github.io/react-toastify/positioning-toast\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          for more example\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Card, Col, Container, Row } from '../../../components/bootstrapComponent';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PageWrapper from \"../../../components/PageWrapper\";\r\nimport ModalsContent from \"./Modals\";\r\nimport SweetAlertContent from \"./SweetAlert\";\r\nimport ToastContent from \"./Toasts\";\r\nimport ToastrContent from \"./Toastr\";\r\n\r\nexport default function Modals() {\r\n  const contents = [\r\n    { id: 1, name: \" Modals\", component: <ModalsContent /> },\r\n    { id: 2, name: \" Toasts\", component: <ToastContent /> },\r\n    { id: 3, name: \" Sweet Alert\", component: <SweetAlertContent /> },\r\n    { id: 4, name: \" Toastr\", component: <ToastrContent /> },\r\n  ];\r\n  return (\r\n    <PageWrapper title=\"Modals & Alerts\">\r\n      <div className=\"p-4 position-relative\">\r\n        <Container fluid>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <h3>Modals & Alerts</h3>\r\n          </div>\r\n          {contents.map((content) => (\r\n            <Row className=\"my-3\" key={content.id}>\r\n              <Col className=\"mt-lg-0 mt-sm-3\">\r\n                <Card className=\"mt-3\">\r\n                  <Card.Header className=\"bg-dark text-white py-3\">\r\n                   {content.name}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    \r\n                    {content.component}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Container>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n"],"names":["ModalsContent","show","setShow","useState","handleClose","showFormModal","setShowFormModal","handleCloseFormModal","smShow","setSmShow","lgShow","setLgShow","showFullscreen","setShowFullscreen","_jsxs","_Fragment","children","ButtonGroup","className","_jsx","Button","variant","onClick","handleShow","handleShowFormModal","Modal","onHide","Header","closeButton","Title","Body","Footer","size","centered","id","Form","Group","controlId","Label","Control","type","placeholder","autoFocus","as","rows","fullscreen","SweetAlertContent","MySwal","withReactContent","Swal","showAlert","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","href","target","rel","ToastContent","Toast","onClose","delay","autohide","bg","src","alt","ToastrContent","ToastContainer","position","style","marginTop","autoClose","notifySuccess","toast","success","notifyError","error","Modals","contents","name","component","PageWrapper","Container","fluid","map","content","Row","Col","Card"],"sourceRoot":""}