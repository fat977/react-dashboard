{"version":3,"file":"static/js/407.22bfc107.chunk.js","mappings":"0JAEe,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAYF,EAASG,SACxBC,MAAM,KACNC,MAAM,GACNC,QAAQC,GAASA,IAElB,MAA0B,0BAAtBP,EAASG,SAA6C,MAE1DK,EAAAA,EAAAA,KAAA,OAAK,aAAW,aAAYC,UAC1BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,CACF,IAArBP,EAAUU,QACTF,EAAAA,EAAAA,MAAAG,EAAAA,SAAA,CAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kBAAiBF,UAC7BD,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,IAAGN,SAAC,YAIfD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAyB,eAAa,OAAMF,SAAC,kBAK7DD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kBAAiBF,UAC7BD,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,IAAGN,SAAC,WAIhBP,EAAUc,KAAI,CAACC,EAASC,KAEvB,MAAMC,EAAM,IAAAC,OAAOlB,EAAUG,MAAM,EAAGa,EAAQ,GAAGG,KAAK,MAEtD,OADeH,IAAUhB,EAAUU,OAAS,GAE1CF,EAAAA,EAAAA,MAAA,MAEEC,UAAU,yBACV,eAAa,OAAMF,SAAA,CAElBa,mBAAmBL,GAAS,MAJxBC,IAOPR,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,kBAAiBF,SAAA,EACzCD,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAII,EAAOV,SAAEa,mBAAmBL,KAAiB,MADhDC,EAIV,QAKX,C","sources":["components/Breadcrumbs.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\n\r\nexport default function Breadcrumbs() {\r\n  const location = useLocation();\r\n  const pathnames = location.pathname\r\n    .split(\"/\")\r\n    .slice(3)\r\n    .filter((path) => path); // Split path and remove empty segments\r\n\r\n    if (location.pathname === '/pages/register-login') return null;\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol className=\"breadcrumb\">\r\n        {pathnames.length === 0 ? (\r\n          <>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">Home</Link>\r\n              {/* Always link to Home */}\r\n            </li>\r\n\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Dashboard\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n        )}\r\n\r\n        {pathnames.map((segment, index) => {\r\n          // Generate URL for each breadcrumb link\r\n          const pathTo = `/${pathnames.slice(1, index + 1).join(\"/\")}`;\r\n          const isLast = index === pathnames.length - 1;\r\n          return isLast ? (\r\n            <li\r\n              key={index}\r\n              className=\"breadcrumb-item active\"\r\n              aria-current=\"page\"\r\n            >\r\n              {decodeURIComponent(segment)} {/* Current page name */}\r\n            </li>\r\n          ) : (\r\n            <li key={index} className=\"breadcrumb-item\">\r\n              <Link to={pathTo}>{decodeURIComponent(segment)}</Link>{\" \"}\r\n              {/* Clickable link */}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","location","useLocation","pathnames","pathname","split","slice","filter","path","_jsx","children","_jsxs","className","length","_Fragment","Link","to","map","segment","index","pathTo","concat","join","decodeURIComponent"],"sourceRoot":""}