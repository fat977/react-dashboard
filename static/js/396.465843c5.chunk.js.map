{"version":3,"file":"static/js/396.465843c5.chunk.js","mappings":"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","sources":["pages/Pages/Register&Login.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/NavLink.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Register&Login.scss\";\r\nimport { Button, Form, InputGroup, NavLink } from \"../../components/bootstrapComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PageWrapper from \"../../components/PageWrapper\";\r\nexport default function Login() {\r\n  const [register, setRegister] = useState(true);\r\n  const [showReg, setShowReg] = useState(false);\r\n  const [showLog, setShowLog] = useState(true);\r\n  function handleForm() {\r\n    setRegister(!register);\r\n    setShowReg(!showReg);\r\n    setShowLog(!showLog);\r\n    setIsClicked(!isClicked);\r\n  }\r\n\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [smallScreen, setSmallScreen] = useState(window.innerWidth < 992);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setSmallScreen(window.innerWidth < 992);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return (\r\n    <PageWrapper title=\"Register & Login\">\r\n      <div>\r\n        \r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"90vh\",\r\n          overflow: \"hidden\",\r\n          top:'30px'\r\n        }}\r\n        className={`form-card container d-flex  align-items-center ${\r\n          smallScreen ? \"w-75\" : \"w-50\"\r\n        }`}\r\n      >\r\n        {/* form Div */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: !smallScreen ? (isClicked ? \"50%\" : \"50%\") : \"100%\",\r\n            transform: smallScreen\r\n              ? \"translateX(-100%)\"\r\n              : isClicked\r\n              ? \"translateX(0)\"\r\n              : \"translateX(-100%)\",\r\n            height: \"100%\",\r\n            width: smallScreen ? \"100%\" : \"50%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n            transition: \"transform 0.5s ease\",\r\n          }}\r\n          className=\"form-div\"\r\n        >\r\n          <div className=\"w-100\">\r\n            {register ? (\r\n              <Form\r\n                className={`login sliding-div w-100 p-lg-4 ${\r\n                  showLog ? \"show-login\" : \"\"\r\n                }`}\r\n              >\r\n                <h3 className=\"text-start mb-4\">Login</h3>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Email\"\r\n                    aria-label=\"Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon2\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Password\"\r\n                    aria-label=\"Password\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    <FontAwesomeIcon icon={faLock} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <Button type=\"submit\" className=\"login-btn w-100\">\r\n                  Login\r\n                </Button>\r\n\r\n                <div\r\n                  className=\"my-3 \"\r\n                  style={{\r\n                    display: smallScreen ? \"block\" : \"none\",\r\n                  }}\r\n                >\r\n                  <span>\r\n                    Don't have an account ?{\" \"}\r\n                    <NavLink onClick={handleForm}>\r\n                      {register ? \"Register\" : \"Login\"}\r\n                    </NavLink>\r\n                  </span>\r\n                </div>\r\n              </Form>\r\n            ) : (\r\n              <form\r\n                className={`register sliding-div w-100  p-lg-4 ${\r\n                  showReg ? \"show-register\" : \"\"\r\n                }`}\r\n              >\r\n                <h3 className=\"text-start mb-4\">Register</h3>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Name\"\r\n                    aria-label=\"Name\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon2\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Email\"\r\n                    aria-label=\"Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon2\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Password\"\r\n                    aria-label=\"Password\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    <FontAwesomeIcon icon={faLock} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <Form.Control\r\n                    placeholder=\"Confirm Password\"\r\n                    aria-label=\"Confirm Password\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    <FontAwesomeIcon icon={faLock} />\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    className=\"text-secondary\"\r\n                    label=\"I agree to terms & conditions\"\r\n                  />\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"register-btn w-100\">\r\n                  Register\r\n                </Button>\r\n                <div\r\n                  className=\"my-3 \"\r\n                  style={{\r\n                    display: smallScreen ? \"block\" : \"none\",\r\n                  }}\r\n                >\r\n                  <span>\r\n                    Have already an account ?{\" \"}\r\n                    <NavLink onClick={handleForm}>\r\n                      {register ? \"Register\" : \"Login\"}\r\n                    </NavLink>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* welcome Div */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            right: !smallScreen ? (isClicked ? \"50%\" : \"50%\") : \"100%\",\r\n            transform: isClicked ? \"translateX(0)\" : \"translateX(100%)\",\r\n            width: smallScreen ? \"100%\" : \"50%\",\r\n            height: \"100%\",\r\n            display: smallScreen ? \"none\" : \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n            transition: \"transform 0.5s ease\",\r\n          }}\r\n          className=\"welcome-div\"\r\n        >\r\n          <div className=\"btn-div w-50 d-flex flex-column justify-content-center align-items-center vh-100\">\r\n            <h1 className=\"text-white\">welcome</h1>\r\n            <Button onClick={handleForm} className=\"welcome-btn w-100\">\r\n              {register ? \"Register\" : \"Login\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;"],"names":["Login","register","setRegister","useState","showReg","setShowReg","showLog","setShowLog","handleForm","setIsClicked","isClicked","smallScreen","setSmallScreen","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","_jsxs","PageWrapper","title","children","_jsx","style","position","width","height","overflow","top","className","concat","left","transform","display","justifyContent","alignItems","cursor","transition","Form","InputGroup","Control","placeholder","Text","id","FontAwesomeIcon","icon","faEnvelope","faLock","Button","type","NavLink","onClick","faUser","Group","controlId","Check","label","right","WeakMap","_excluded","Anchor","React","_ref","ref","onKeyDown","props","r","e","t","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","Object","assign","tagName","handleKeyDown","useEventCallback","href","trim","role","displayName","useCallbackRef","useEventListener","eventTarget","event","listener","capture","arguments","length","undefined","handler","target","isReactNative","global","navigator","product","document","useLayoutEffect","useMounted","mounted","useRef","isMounted","current","usePrevious","value","InputGroupText","bsPrefix","as","Component","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","Radio","FormCheckInput","Checkbox","context","active","eventKey","disabled","navItemProps","meta","useNavItem","key","makeEventKey","isActive"],"sourceRoot":""}