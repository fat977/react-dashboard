{"version":3,"file":"static/js/846.827ae0a5.chunk.js","mappings":"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","sources":["components/CardComponent.js","pages/Elements/General/General.js"],"sourcesContent":["import { Card, Col } from \"react-bootstrap\";\r\n\r\nexport default function GeneralCard({title,children}) {\r\n  return(\r\n    <Col xs={12} md={6} lg={6} className=\"mt-lg-0 mt-sm-3\">\r\n      <Card className=\"mt-3\">\r\n        <Card.Header className=\"bg-primary text-white py-3\">\r\n          {title}\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {children}\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport{Accordion,Badge,Carousel,ProgressBar,Spinner,Stack,Container,Form,Row,Button} from '../../../components/bootstrapComponent'\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\n\r\n// import required modules\r\nimport { Pagination } from \"swiper/modules\";\r\nimport PageWrapper from \"../../../components/PageWrapper\";\r\nimport GeneralCard from \"../../../components/CardComponent\";\r\n\r\nimport '../Elements.scss'\r\nexport default function GeneralElements() {\r\n  /////// range //////////////////\r\n  const [value, setValue] = useState(50);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const getBackgroundColor = () => {\r\n    if (value < 33) return \"#FF5733\"; // Red for low values\r\n    if (value < 66) return \"#FFC300\"; // Yellow for medium values\r\n    return \"#4CAF50\"; // Green for high values\r\n  };\r\n  ///////////// badges ///////////////\r\n  const colors = [\r\n    \"secondary\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"info\",\r\n    \"light\",\r\n    \"dark\",\r\n  ];\r\n  ////////// sliders ////////////////\r\n  const items = [\"Slide 1 Content\", \"Slide 2 Content\", \"Slide 3 Content\"];\r\n\r\n  return (\r\n    <PageWrapper title=\"General Elements\">\r\n      <div className=\"p-4\">\r\n        <Container fluid>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <h3>General Elements</h3>\r\n          </div>\r\n          <Row className=\"g-3 my-3\">\r\n            <GeneralCard title=\"Range\">\r\n              <div className=\"custom-range\">\r\n                <Form.Label>Range:</Form.Label>\r\n                <Form.Range />\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: \"100%\",\r\n                  margin: \"20px 0\",\r\n                }}\r\n              >\r\n                <h5>Custom Range:</h5>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: `calc(${value}% - 15px)`, // Adjusting position dynamically\r\n                    top: \"5px\",\r\n                    backgroundColor: getBackgroundColor(),\r\n                    color: \"#fff\",\r\n                    padding: \"5px 10px\",\r\n                    borderRadius: \"10px\",\r\n                    fontSize: \"14px\",\r\n                    transform: \"translateX(-50%)\",\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"8px\",\r\n                    borderRadius: \"5px\",\r\n                    /* backgroundColor: getBackgroundColor(), */\r\n                    background: `linear-gradient(to right, ${getBackgroundColor()} ${value}%, ${getBackgroundColor()} ${value}%)`,\r\n                    outline: \"none\",\r\n                    transition: \"background 0.3s\",\r\n                    appearance: \"none\",\r\n                  }}\r\n                />\r\n                <p>Value: {value}</p>\r\n              </div>\r\n            </GeneralCard>\r\n            <GeneralCard title=\"Progress\">\r\n              <div className=\"mb-3\">\r\n                <h5>Basic Progress</h5>\r\n                <ProgressBar now={60} />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Progress with label</h5>\r\n                <ProgressBar now={60} label={`60%`} />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Striped progress</h5>\r\n                <ProgressBar striped variant=\"danger\" now={60} label={`60%`} />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Animated progress</h5>\r\n                <ProgressBar\r\n                  animated\r\n                  variant=\"success\"\r\n                  now={60}\r\n                  label={`60%`}\r\n                />\r\n              </div>\r\n            </GeneralCard>\r\n          </Row>\r\n\r\n          <Row className=\"g-3 my-3\">\r\n            <GeneralCard title=\"Badges\">\r\n              <div className=\"mb-3\">\r\n                <h5>Basic Badge</h5>\r\n                <div className=\" w-75 d-flex justify-content-between\">\r\n                  {[\"secondary\", \"primary\", \"danger\", \"success\", \"warning\"].map(\r\n                    (bg, index) => (\r\n                      <Badge key={index} bg={bg}>\r\n                        New\r\n                      </Badge>\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Button Badge</h5>\r\n                <Button variant=\"primary\">\r\n                  Profile <Badge bg=\"secondary\">9</Badge>\r\n                  <span className=\"visually-hidden\">unread messages</span>\r\n                </Button>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Pills Badge</h5>\r\n                <Stack className=\"flex-wrap\" direction=\"horizontal\" gap={2}>\r\n                  {colors.map((bg, index) => (\r\n                    <Badge\r\n                      key={index}\r\n                      bg={bg}\r\n                      text={bg === \"light\" ? \"dark\" : \"white\"}\r\n                    >\r\n                      Primary\r\n                    </Badge>\r\n                  ))}\r\n                </Stack>\r\n              </div>\r\n            </GeneralCard>\r\n            <GeneralCard title=\"Spinners\">\r\n              <div className=\"d-flex justify-content-around mb-3\">\r\n                <div>\r\n                  <h5>Basic Spinner</h5>\r\n                  <Spinner animation=\"border\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <h5>Grow Spinner</h5>\r\n                  <Spinner animation=\"grow\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-around mb-3\">\r\n                <div>\r\n                  <h5>Basic Spinner</h5>\r\n                  <Spinner variant=\"danger\" size=\"sm\" animation=\"border\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <h5>Grow Spinner</h5>\r\n                  <Spinner variant=\"warning\" size=\"sm\" animation=\"grow\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Button variant=\"primary\" disabled>\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  Loading...\r\n                </Button>\r\n              </div>\r\n            </GeneralCard>\r\n          </Row>\r\n\r\n          <Row className=\"g-3 my-3\">\r\n            <GeneralCard title=\"Accordion\">\r\n              <div className=\"mb-3\">\r\n                <h5>Basic Accordion</h5>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>Accordion Item #1</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                      Duis aute irure dolor in reprehenderit in voluptate velit\r\n                      esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                      sint occaecat cupidatat non proident, sunt in culpa qui\r\n                      officia deserunt mollit anim id est laborum.\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Accordion Item #2</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                      Duis aute irure dolor in reprehenderit in voluptate velit\r\n                      esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                      sint occaecat cupidatat non proident, sunt in culpa qui\r\n                      officia deserunt mollit anim id est laborum.\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h5>Flush Accordion</h5>\r\n                <Accordion flush>\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>Accordion Item #1</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                      Duis aute irure dolor in reprehenderit in voluptate velit\r\n                      esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                      sint occaecat cupidatat non proident, sunt in culpa qui\r\n                      officia deserunt mollit anim id est laborum.\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>Accordion Item #2</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                      Duis aute irure dolor in reprehenderit in voluptate velit\r\n                      esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                      sint occaecat cupidatat non proident, sunt in culpa qui\r\n                      officia deserunt mollit anim id est laborum.\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </GeneralCard>\r\n            <GeneralCard title=\"Carousel\">\r\n              <div className=\"mb-3\">\r\n                <h5>Basic Carousel</h5>\r\n                <Carousel data-bs-theme=\"dark\" fade>\r\n                  {items.map((item, index) => (\r\n                    <Carousel.Item key={index}>\r\n                      <div\r\n                        className=\"d-flex justify-content-center align-items-center\"\r\n                        style={{ height: \"200px\" }}\r\n                      >\r\n                        <h3>{item}</h3>\r\n                      </div>\r\n                    </Carousel.Item>\r\n                  ))}\r\n                </Carousel>\r\n              </div>\r\n\r\n              <div className=\"mb-3\" style={{ width: \"100%\" }}>\r\n                <h5>Advanced Carousel</h5>\r\n                <Swiper\r\n                  spaceBetween={20}\r\n                  slidesPerView={1}\r\n                  pagination={true}\r\n                  modules={[Pagination]}\r\n                >\r\n                  {items.map((item, index) => (\r\n                    <SwiperSlide key={index}>\r\n                      <h3 style={{ textAlign: \"center\", padding: \"50px\" }}>\r\n                        {item}\r\n                      </h3>\r\n                    </SwiperSlide>\r\n                  ))}\r\n                </Swiper>\r\n                <a href=\"https://swiperjs.com/demos\">for more example</a>\r\n              </div>\r\n            </GeneralCard>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n"],"names":["GeneralCard","_ref","title","children","_jsx","Col","xs","md","lg","className","_jsxs","Card","Header","Body","GeneralElements","value","setValue","useState","getBackgroundColor","items","PageWrapper","Container","fluid","Row","Form","Label","Range","style","position","width","margin","left","concat","top","backgroundColor","color","padding","borderRadius","fontSize","transform","type","min","max","onChange","e","target","height","background","outline","transition","appearance","ProgressBar","now","label","striped","variant","animated","map","bg","index","Badge","Button","Stack","direction","gap","text","Spinner","animation","size","disabled","as","role","Accordion","defaultActiveKey","Item","eventKey","flush","Carousel","fade","item","Swiper","spaceBetween","slidesPerView","pagination","modules","Pagination","SwiperSlide","textAlign","href"],"sourceRoot":""}